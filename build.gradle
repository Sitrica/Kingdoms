import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.de.set.gradle:gradle-eclipse-compiler-plugin:1.4.1"
	}
}

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: "de.set.ecj"

jar.archiveName = project.name + '.jar'

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
	mavenCentral()
	jcenter()

	// PlaceholderAPI
	maven {
		url 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
	}

	// Spigot
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}

	// Bungeecord
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots/'
	}

	// HolographicDisplays
	maven {
		url 'https://repo.codemc.io/repository/maven-public/'
	}

	// AnvilGUI
	maven {
		url 'https://nexus.wesjd.net/repository/thirdparty/'
	}

	// Citizens
	maven {
		url 'https://repo.citizensnpcs.co'
	}

	// WorldEdit
	maven {
		url 'http://maven.sk89q.com/repo'
	}

	maven {
		url 'https://jitpack.io'
	}

	// Sitrica
	maven {
		url 'https://maven.pkg.github.com/Sitrica/SourCore/'
		credentials {
            username = "Sitrica"
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES_KEY")
        }
	}

	sourceCompatibility = 1.8

}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {

	// HolographicDisplays
	implementation (group: 'com.gmail.filoghost.holographicdisplays', name: 'holographicdisplays-plugin', version: '2.3.2') {
		exclude group: 'org.bstats', module: 'bstats-bukkit-lite'
	}

	// Spigot
	implementation (group: 'org.spigotmc', name: 'spigot-api', version: '1.15.2-R0.1-SNAPSHOT')

	// Dynmap
	implementation (group: 'com.github.webbukkit', name: 'dynmap-api', version: 'v2.5') {
		exclude group: 'org.bukkit', module: 'bukkit'
	}

	// Citizens
	implementation (group: 'net.citizensnpcs', name: 'citizensapi', version: '2.0.28-SNAPSHOT')

	// Vault
	implementation (group: 'com.github.MilkBowl', name: 'VaultAPI', version: '1.7')

	// PlaceholderAPI
	implementation (group: 'me.clip', name: 'placeholderapi', version: '2.10.9')

	// WorldGuard
	implementation (group: 'com.sk89q.worldguard', name: "worldguard-bukkit", version: '7.0.3-SNAPSHOT')

	// WorldEdit
	implementation (group: 'com.sk89q.worldedit', name: "worldedit-bukkit", version: '7.2.0-SNAPSHOT')

	// Caffeine
	shade (group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.0')

	// AnvilGUI
	shade (group: 'net.wesjd', name: 'anvilgui', version: '1.2.1-SNAPSHOT')

	// H2 Database
	shade (group: 'com.h2database', name: 'h2', version: '1.4.200')

	// Sitrica Core
	shade (group: 'com.sitrica', name: 'core', version: '1.0.8')

	// JSON.org
	shade (group: 'org.json', name: 'json', version: '20210307')

	shade fileTree(dir: 'libraries', include: '*.jar')

}

processResources {
	from (sourceSets.main.resources.srcDirs) {
		filter ReplaceTokens, tokens: ["version": project.property("version")]
		include '**/*.yml'
	}
}

jar {
	from 'kingdoms-worldguard6/java/main'
	configurations.shade.each { dep ->
		from (project.zipTree(dep)) {
			exclude '**/*.php'
			exclude '**/*.yml'
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
